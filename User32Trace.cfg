// USER32 DLL Native Interface entry points

// @author Roger Orr <rogero@howzatt.co.uk>

// Copyright &copy; 2013.
// This software is distributed in the hope that it will be useful, but
// without WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

// Permission is granted to anyone to make or distribute verbatim
// copies of this software provided that the copyright notice and
// this permission notice are preserved, and that the distributor
// grants the recipient permission for further distribution as permitted
// by this notice.

// Comments and suggestions are always welcome.
// Please report bugs to rogero@howzatt.co.uk.

// $Id: User32Trace.cfg 1881 2020-04-09 20:55:12Z Roger $

//[win32u.dll]
//[User32.dll]

typedef HANDLE HACCEL;
typedef HANDLE HBITMAP;
typedef HANDLE HCURSOR;
typedef HANDLE HDC;
typedef HANDLE HDESK;
typedef HANDLE HDWP;
typedef HANDLE HHOOK;
typedef HANDLE HKL;
typedef HANDLE HMENU;
typedef HANDLE HRAWINPUT;
typedef HANDLE HRGN;
typedef HANDLE HWINEVENTHOOK;
typedef HANDLE HWINSTA;
typedef HANDLE HWND;

typedef LONG_PTR HINSTANCE;
typedef LONG_PTR LPARAM;
typedef LONG_PTR LRESULT;

typedef PHANDLE PHKL;

typedef PULONG LPDWORD;
typedef PULONG PCOLORREF;

typedef PVOID LPACCEL;
typedef PVOID LPCRECT;
typedef PVOID LPINPUT;
typedef PVOID LPMSG;
typedef PVOID LPMOUSEMOVEPOINT;
typedef PVOID LPPAINTSTRUCT;
typedef PVOID LPPOINT;
typedef PVOID LPRECT;
typedef PVOID LPTPMPARAMS;
typedef PVOID LPTRACKMOUSEEVENT;
typedef PVOID LPVOID;
typedef PVOID MONITORENUMPROC;
typedef PVOID PCHANGEFILTERSTRUCT;
typedef PVOID PCOMBOBOXINFO;
typedef PVOID PCRAWINPUTDEVICE;
typedef PVOID PCURSORINFO;
typedef PVOID PFLASHWINFO;
typedef PVOID PGESTURECONFIG;
typedef PVOID PGUITHREADINFO;
typedef PVOID PMENUBARINFO;
typedef PVOID PPAINTSTRUCT;
typedef PVOID PPOINT;
typedef PVOID PRAWINPUTDEVICE;
typedef PVOID PRAWINPUTDEVICELIST;
typedef PVOID PRECT;
typedef PVOID PSCROLLBARINFO;
typedef PVOID PSIZE;
typedef PVOID PTITLEBARINFO;
typedef PVOID PWINDOWPLACEMENT;
typedef PVOID TIMERPROC;

typedef UINT_PTR WPARAM;

typedef ULONG ATOM;
typedef ULONG BYTE;
typedef ULONG COLORREF;

typedef ULONGLONG POINT;

//[Keyboard]
WINUSERAPI
HKL
WINAPI
NtUserActivateKeyboardLayout(
//[=ActivateKeyboardLayout]
    __in HKL hkl,
    __in UINT Flags
    );

//[Clipboard]
WINUSERAPI
BOOL
WINAPI
NtUserAddClipboardFormatListener(
//[=AddClipboardFormatListener]
    __in HWND hwnd
    );

//[Process]
WINUSERAPI
BOOL
WINAPI
NtUserAttachThreadInput(
//[=AttachThreadInput]
    __in DWORD idAttach,
    __in DWORD idAttachTo,
    __in BOOL fAttach
    );

//[Drawing]
WINUSERAPI
HDC
WINAPI
NtUserBeginPaint(
//[=BeginPaint]
    __in HWND hWnd,
    __out LPPAINTSTRUCT lpPaint
    );

//[Keyboard]
WINUSERAPI
BOOL
WINAPI
NtUserBlockInput(
//[=BlockInput]
    BOOL fBlockIt
    );

//[Menu]
DWORD
WINAPI
NtUserCalcMenuBar(
//[=CalcMenuBar]
    HWND hWnd,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    PRECT pRect
    );

//[Window]
WINUSERAPI
BOOL
WINAPI
NtUserCalculatePopupWindowPosition(
//[=CalculatePopupWindowPosition]
    __in PPOINT anchorPoint,
    __in PSIZE windowSize,
    __in UINT flags,
    __in_opt PRECT excludeRect,
    __out PRECT popupWindowPosition
    );

//[Clipboard]
WINUSERAPI
BOOL
WINAPI
NtUserChangeClipboardChain(
//[=ChangeClipboardChain]
    __in HWND hWndRemove,
    __in HWND hWndNewNext
    );

//[Window]
WINUSERAPI
BOOL
WINAPI
NtUserChangeWindowMessageFilterEx(
//[=ChangeWindowMessageFilterEx]
    __in HWND hwnd,
    __in UINT message,
    __in DWORD action,
    __inout_opt PCHANGEFILTERSTRUCT pChangeFilterStruct
    );

//[Desktop]
NTSTATUS
NTAPI
NtUserCheckDesktopByThreadId(
//[=CheckDesktopByThreadId]
    ULONG Unknown
    );

//[Desktop]
NTSTATUS
NTAPI
NtUserCheckWindowThreadDesktop(
//[=CheckWindowThreadDesktop]
    ULONG Unknown,
    ULONG Unknown
    );

//[Window]
WINUSERAPI
HWND
WINAPI
NtUserChildWindowFromPointEx(
//[=ChildWindowFromPointEx]
    _In_ HWND hwnd,
    _In_ POINT pt,
    _In_ UINT flags
    );

//[Cursor]
WINUSERAPI
BOOL
WINAPI
NtUserClipCursor(
//[=ClipCursor]
    _In_opt_ PRECT lpRect
    );

//[Clipboard]
WINUSERAPI
BOOL
WINAPI
NtUserCloseClipboard(
//[=CloseClipboard]
    );

//[Desktop]
WINUSERAPI
BOOL
WINAPI
NtUserCloseDesktop(
//[=CloseDesktop]
    _In_ HDESK hDesktop
    );

//[Desktop]
WINUSERAPI
BOOL
WINAPI
NtUserCloseWindowStation(
//[=CloseWindowStation]
    _In_ HWINSTA hWinSta
    );

//[Other]
NTSTATUS
NTAPI
NtUserControlMagnification(
//[=ControlMagnification]
    ULONG Unknown,
    ULONG Unknown
    );

//[Keyboard]
WINUSERAPI
int
WINAPI
NtUserCopyAcceleratorTable(
//[=CopyAcceleratorTableW]
    _In_ HACCEL hAccelSrc,
    _Out_ LPACCEL lpAccelDst,
    _In_ int cAccelEntries
    );

//[Clipboard]
WINUSERAPI
int
WINAPI
NtUserCountClipboardFormats(
//[=CountClipboardFormats]
    );

//[Keyboard]
WINUSERAPI
HACCEL
WINAPI
NtUserCreateAcceleratorTable(
//[=CreateAcceleratorTableW]
    _In_ LPACCEL paccel,
    _In_ int cAccel
    );

//[Caret]
WINUSERAPI
BOOL
WINAPI
NtUserCreateCaret(
//[=CreateCaret]
    _In_ HWND hWnd,
    _In_opt_ HBITMAP hBitmap,
    _In_ int nWidth,
    _In_ int nHeight
    );

//[Window]
WINUSERAPI
HDWP
WINAPI
NtUserDeferWindowPos(
//[=DeferWindowPos]
    _In_ HDWP hWinPosInfo,
    _In_ HWND hWnd,
    _In_opt_ HWND hWndInsertAfter,
    _In_ int x,
    _In_ int y,
    _In_ int cx,
    _In_ int cy,
    _In_ UINT uFlags
    );

//[Window]
WINUSERAPI
HDWP
WINAPI
NtUserDeferWindowPosAndBand(
    _In_ HDWP hWinPosInfo,
    _In_ HWND hWnd,
    _In_opt_ HWND hWndInsertAfter,
    _In_ int x,
    _In_ int y,
    _In_ int cx,
    _In_ int cy,
    _In_ UINT uFlags,
    _In_ ULONG Unknown1,
    _In_ ULONG Unknown2
    );

//[Menu]
WINUSERAPI
BOOL
WINAPI
NtUserDeleteMenu(
//[=DeleteMenu]
    _In_ HMENU hMenu,
    _In_ UINT uPosition,
    _In_ UINT uFlags
    );

//[Menu]
WINUSERAPI
BOOL
WINAPI
NtUserDestroyMenu(
//[=DestroyMenu]
    _In_ HMENU hMenu
    );

//[Window]
WINUSERAPI
BOOL
WINAPI
NtUserDestroyWindow(
//[=DestroyWindow]
    _In_ HWND hWnd
    );

//[Other]
NTSTATUS
NTAPI
NtUserDoSoundConnect(
//[=DoSoundConnect]
    );

//[Other]
NTSTATUS
NTAPI
NtUserDoSoundDisconnect(
//[=DoSoundDisconnect]
    );

//[Mouse]
WINUSERAPI
BOOL
WINAPI
NtUserDragDetect(
//[=DragDetect]
    _In_ HWND hwnd,
    _In_ POINT pt
    );

//[Mouse]
WINUSERAPI
DWORD
WINAPI
NtUserDragObject(
//[=DragObject]
    _In_ HWND hwndParent,
    _In_ HWND hwndFrom,
    _In_ UINT fmt,
    _In_ ULONG_PTR data,
    _In_opt_ HCURSOR hcur
    );

//[Drawing]
WINUSERAPI
BOOL
WINAPI
NtUserDrawAnimatedRects(
//[=DrawAnimatedRects]
    _In_opt_ HWND hwnd,
    _In_ int idAni,
    _In_ PRECT lprcFrom,
    _In_ PRECT lprcTo
    );

//[Other]
NTSTATUS
NTAPI
NtUserDwmStartRedirection(
//[=DwmStartRedirection]
    ULONG Unknown
    );

//[Other]
NTSTATUS
NTAPI
NtUserDwmStopRedirection(
//[=DwmStopRedirection]
    );

//[Clipboard]
WINUSERAPI
BOOL
WINAPI
NtUserEmptyClipboard(
//[=EmptyClipboard]
    );

//[Menu]
WINUSERAPI
BOOL
WINAPI
NtUserEndMenu(
//[=EndMenu]
    );

//[Drawing]
WINUSERAPI
BOOL
WINAPI
NtUserEndPaint(
//[=EndPaint]
    _In_ HWND hWnd,
    _In_ PPAINTSTRUCT lpPaint
    );

//[Device]
WINUSERAPI
BOOL
WINAPI
NtUserEnumDisplayMonitors(
//[=EnumDisplayMonitors]
    _In_opt_ HDC hdc,
    _In_opt_ LPCRECT lprcClip,
    _In_ MONITORENUMPROC lpfnEnum,
    _In_ LPARAM dwData
    );

//[Drawing]
WINUSERAPI
int
WINAPI
NtUserExcludeUpdateRgn(
//[=ExcludeUpdateRgn]
    _In_ HDC hDC,
    _In_ HWND hWnd
    );

//[Error]
WINUSERAPI
BOOL
WINAPI
NtUserFlashWindowEx(
//[=FlashWindowEx]
    _In_ PFLASHWINFO pfwi
    );

//[Error]
WINUSERAPI
HWND
WINAPI
NtUserFrostCrashedWindow(
//[=FrostCrashedWindow]
    HWND hwndToReplace,
    HWND hwndErrorReportOwnerWnd 
    );

//[Window]
WINUSERAPI
HWND
WINAPI
NtUserGetAncestor(
//[=GetAncestor]
    _In_ HWND hwnd,
    _In_ UINT gaFlags
    );

//[Caret]
WINUSERAPI
UINT
WINAPI
NtUserGetCaretBlinkTime(
//[=GetCaretBlinkTime]
    );

//[Caret]
WINUSERAPI
BOOL
WINAPI
NtUserGetCaretPos(
//[=GetCaretPos]
    _Out_ LPPOINT lpPoint
    );

//[Cursor]
WINUSERAPI
BOOL
WINAPI
NtUserGetClipCursor(
//[=GetClipCursor]
    _Out_ LPRECT lpRect
    );

//[Clipboard]
WINUSERAPI
HWND
WINAPI
NtUserGetClipboardOwner(
//[=GetClipboardOwner]
    );

//[Clipboard]
WINUSERAPI
DWORD
WINAPI
NtUserGetClipboardSequenceNumber(
//[=GetClipboardSequenceNumber]
    );

//[Clipboard]
WINUSERAPI
HWND
WINAPI
NtUserGetClipboardViewer(
//[=GetClipboardViewer]
    );

//[Control]
WINUSERAPI
BOOL
WINAPI
NtUserGetComboBoxInfo(
//[=GetComboBoxInfo]
    _In_ HWND hwndCombo,
    _Inout_ PCOMBOBOXINFO pcbi
    );

//[Cursor]
WINUSERAPI
BOOL
WINAPI
NtUserGetCursorInfo(
//[=GetCursorInfo]
    __inout PCURSORINFO pci
    );

//[Device]
WINUSERAPI
HDC
WINAPI
NtUserGetDC(
//[=GetDC]
    __in_opt HWND hWnd
    );

//[Device]
WINUSERAPI
HDC
WINAPI
NtUserGetDCEx(
//[=GetDCEx]
    __in_opt HWND hWnd,
    __in_opt HRGN hrgnClip,
    __in DWORD flags
    );

//[Mouse]
WINUSERAPI
UINT
WINAPI
NtUserGetDoubleClickTime(
//[=GetDoubleClickTime]
    );

//[Window]
WINUSERAPI
HWND
WINAPI
NtUserGetForegroundWindow(
//[=GetForegroundWindow]
    );

//[Window]
WINUSERAPI
BOOL
WINAPI
NtUserGetGUIThreadInfo(
//[=GetGUIThreadInfo]
    __in DWORD idThread,
    __inout PGUITHREADINFO pgui
    );

//[Touch]
WINUSERAPI
BOOL
WINAPI
NtUserGetGestureConfig(
//[=GetGestureConfig]
    __in HWND hwnd,
    __in DWORD dwReserved,
    __in DWORD dwFlags,
    __in PUINT pcIDs,
    __inout PGESTURECONFIG pGestureConfig,
    __in UINT cbSize
    );

//[Process]
WINUSERAPI
DWORD
WINAPI
NtUserGetGuiResources(
//[=GetGuiResources]
    __in HANDLE hProcess,
    __in DWORD uiFlags
    );

//[Other]
NTSTATUS
NTAPI
NtUserGetInputLocaleInfo(
//[=GetInputLocaleInfo]
    ULONG Unknown,
    ULONG Unknown
    );

//[Window]
NTSTATUS
NTAPI
NtUserGetInternalWindowPos(
//[=GetInternalWindowPos]
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown
    );

//[Keyboard]
WINUSERAPI
int
WINAPI
NtUserGetKeyboardLayoutList(
//[=GetKeyboardLayoutList]
    __in int nBuff,
    __out_opt PHKL pList
    );

//[Keyboard]
WINUSERAPI
BOOL
WINAPI
NtUserGetKeyboardState(
//[=GetKeyboardState]
    __out PBYTE lpKeyState
    );

//[Window]
WINUSERAPI
BOOL
WINAPI
NtUserGetLayeredWindowAttributes(
//[=GetLayeredWindowAttributes]
    __in HWND hwnd,
    __out_opt PCOLORREF pcrKey,
    __out_opt PBYTE pbAlpha,
    __out_opt PDWORD pdwFlags
    );

//[Control]
WINUSERAPI
DWORD
WINAPI
NtUserGetListBoxInfo(
//[=GetListBoxInfo]
    __in HWND hwnd);

//[Other]
NTSTATUS
NTAPI
NtUserGetMagnificationLensCtxInformation(
//[=GetMagnificationLensCtxInformation]
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown
    );

//[Menu]
WINUSERAPI
BOOL
WINAPI
NtUserGetMenuBarInfo(
//[=GetMenuBarInfo]
    __in HWND hwnd,
    __in LONG idObject,
    __in LONG idItem,
    __inout PMENUBARINFO pmbi);

//[Menu]
WINUSERAPI
BOOL
WINAPI
NtUserGetMenuItemRect(
//[=GetMenuItemRect]
    __in_opt HWND hWnd,
    __in HMENU hMenu,
    __in UINT uItem,
    __out LPRECT lprcItem
    );

//[Mouse]
WINUSERAPI
int
WINAPI
NtUserGetMouseMovePointsEx(
//[=GetMouseMovePointsEx]
    __in UINT cbSize,
    __in LPMOUSEMOVEPOINT lppt,
    __out LPMOUSEMOVEPOINT lpptBuf,
    __in int nBufPoints,
    __in DWORD resolution
    );

//[Clipboard]
WINUSERAPI
HWND
WINAPI
NtUserGetOpenClipboardWindow(
//[=GetOpenClipboardWindow]
    );

//[Clipboard]
WINUSERAPI
int
WINAPI
NtUserGetPriorityClipboardFormat(
//[=GetPriorityClipboardFormat]
    __in PUINT paFormatPriorityList,
    __in int cFormats
    );

//[Desktop]
WINUSERAPI
HWINSTA
WINAPI
NtUserGetProcessWindowStation(
//[=GetProcessWindowStation]
    );

//[Device]
WINUSERAPI
UINT
WINAPI
NtUserGetRawInputData(
//[=GetRawInputData]
    __in HRAWINPUT hRawInput,
    __in UINT uiCommand,
    __out LPVOID pData,
    __inout PUINT pcbSize,
    __in UINT cbSizeHeader
    );

//[Device]
WINUSERAPI
UINT
WINAPI
NtUserGetRawInputDeviceList(
//[=GetRawInputDeviceList]
    __out PRAWINPUTDEVICELIST pRawInputDeviceList,
    __inout PUINT puiNumDevices,
    __in UINT cbSize
    );

//[Device]
WINUSERAPI
UINT
WINAPI
NtUserGetRegisteredRawInputDevices(
//[=GetRegisteredRawInputDevices]
    __out PRAWINPUTDEVICE pRawInputDevices,
    __inout PUINT puiNumDevices,
    __in UINT cbSize
    );

//[Control]
WINUSERAPI
BOOL
WINAPI
NtUserGetScrollBarInfo(
//[=GetScrollBarInfo]
    __in HWND hwnd,
    __in LONG idObject,
    __inout PSCROLLBARINFO psbi
    );

//[Menu]
WINUSERAPI
HMENU
WINAPI
NtUserGetSystemMenu(
//[=GetSystemMenu]
    __in HWND hWnd,
    __in BOOL bRevert
    );

//[Desktop]
WINUSERAPI
HDESK
WINAPI
NtUserGetThreadDesktop(
//[=GetThreadDesktop]
    __in DWORD dwThreadId
    );

//[Window]
WINUSERAPI
BOOL
WINAPI
NtUserGetTitleBarInfo(
//[=GetTitleBarInfo]
    __in HWND hwnd,
    __inout PTITLEBARINFO pti
    );

//[Window]
NTSTATUS
NTAPI
NtUserGetTopLevelWindow(
//[=GetTopLevelWindow]
    ULONG Unknown
    );

//[Clipboard]
WINUSERAPI
BOOL
WINAPI
NtUserGetUpdatedClipboardFormats(
//[=GetUpdatedClipboardFormats]
    __out PUINT lpuiFormats,
    __in UINT cFormats,
    __out PUINT pcFormatsOut
    );

//[Desktop]
WINUSERAPI
BOOL
WINAPI
NtUserGetUserObjectInformation(
//[=GetUserObjectInformationW]
    __in HANDLE hObj,
    __in int nIndex,
    __out PVOID pvInfo,
    __in DWORD nLength,
    __out_opt LPDWORD lpnLengthNeeded
    );

//[Window]
NTSTATUS
NTAPI
NtUserGetWindowCompositionAttribute(
//[=GetWindowCompositionAttribute]
    ULONG Unknown,
    ULONG Unknown
    );

//[Window]
NTSTATUS
NTAPI
NtUserGetWindowCompositionInfo(
//[=GetWindowCompositionInfo]
    ULONG Unknown,
    ULONG Unknown
    );

//[Drawing]
WINUSERAPI
HDC
WINAPI
NtUserGetWindowDC(
//[=GetWindowDC]
    __in_opt HWND hWnd
    );

//[Window]
WINUSERAPI
BOOL
WINAPI
NtUserGetWindowDisplayAffinity(
//[=GetWindowDisplayAffinity]
    __in HWND hWnd,
    __out PDWORD pdwAffinity
    );

//[Window]
NTSTATUS
NTAPI
NtUserGetWindowMinimizeRect(
//[=GetWindowMinimizeRect]
    ULONG Unknown,
    ULONG Unknown
    );

//[Window]
WINUSERAPI
BOOL
WINAPI
NtUserGetWindowPlacement(
//[=GetWindowPlacement]
    __in HWND hWnd,
    __inout PWINDOWPLACEMENT lpwndpl
    );

//[Drawing]
NTSTATUS
NTAPI
NtUserGetWindowRgnEx(
//[=GetWindowRgnEx]
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown
    );

//[Error]
WINUSERAPI
HWND
WINAPI
NtUserGhostWindowFromHungWindow(
//[=GhostWindowFromHungWindow]
    HWND HungWindow
    );

//[Caret]
WINUSERAPI
BOOL
WINAPI
NtUserHideCaret(
//[=HideCaret]
    __in_opt HWND hWnd
    );

//[Menu]
WINUSERAPI
BOOL
WINAPI
NtUserHiliteMenuItem(
//[=HiliteMenuItem]
    __in HWND hWnd,
    __in HMENU hMenu,
    __in UINT uIDHiliteItem,
    __in UINT uHilite
    );

//[Error]
WINUSERAPI
HWND
WINAPI
NtUserHungWindowFromGhostWindow(
//[=HungWindowFromGhostWindow]
    HWND GhostWindow
    );

//[Window]
NTSTATUS
NTAPI
NtUserImpersonateDdeClientWindow(
//[=ImpersonateDdeClientWindow]
    ULONG Unknown,
    ULONG Unknown
    );

//[Drawing]
WINUSERAPI
BOOL
WINAPI
NtUserInvalidateRect(
//[=InvalidateRect]
    __in_opt HWND hWnd,
    __in_opt PRECT lpRect,
    __in BOOL bErase
    );

//[Drawing]
WINUSERAPI
BOOL
WINAPI
NtUserInvalidateRgn(
//[=InvalidateRgn]
    __in HWND hWnd,
    __in_opt HRGN hRgn,
    __in BOOL bErase
    );

//[Clipboard]
WINUSERAPI
BOOL
WINAPI
NtUserIsClipboardFormatAvailable(
//[=IsClipboardFormatAvailable]
    __in UINT format
    );

//[Window]
WINUSERAPI
BOOL
WINAPI
NtUserIsTopLevelWindow(
//[=IsTopLevelWindow]
    HWND hWnd
    );

//[Touch]
WINUSERAPI
BOOL
WINAPI
NtUserIsTouchWindow(
//[=IsTouchWindow]
    __in HWND hwnd,
    __out_opt PULONG pulFlags
    );

//[Timer]
WINUSERAPI
BOOL
WINAPI
NtUserKillTimer(
//[=KillTimer]
    __in_opt HWND hWnd,
    __in UINT_PTR uIDEvent
    );

//[Desktop]
WINUSERAPI
BOOL
WINAPI
NtUserLockWindowStation(
//[=LockWindowStation]
     	HWINSTA hWinSta
    );

//[Drawing]
WINUSERAPI
BOOL
WINAPI
NtUserLockWindowUpdate(
//[=LockWindowUpdate]
    __in_opt HWND hWndLock
    );

//[Desktop]
WINUSERAPI
BOOL
WINAPI
NtUserLockWorkStation(
//[=LockWorkStation]
    );

//[Window]
WINUSERAPI
BOOL
WINAPI
NtUserLogicalToPhysicalPoint(
//[=LogicalToPhysicalPoint]
    __in HWND hWnd,
    __inout LPPOINT lpPoint
    );

//[Menu]
WINUSERAPI
int
WINAPI
NtUserMenuItemFromPoint(
//[=MenuItemFromPoint]
    __in_opt HWND hWnd,
    __in HMENU hMenu,
    __in POINT ptScreen
    );

//[Window]
WINUSERAPI
BOOL
WINAPI
NtUserMoveWindow(
//[=MoveWindow]
    __in HWND hWnd,
    __in int X,
    __in int Y,
    __in int nWidth,
    __in int nHeight,
    __in BOOL bRepaint
    );

//[Desktop]
WINUSERAPI
HDESK
WINAPI
NtUserOpenInputDesktop(
//[=OpenInputDesktop]
    _In_ DWORD dwFlags,
    _In_ BOOL fInherit,
    _In_ ACCESS_MASK dwDesiredAccess
    );

//[Desktop]
NTSTATUS
NTAPI
NtUserOpenThreadDesktop(
//[=OpenThreadDesktop]
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown
    );

//[Drawing]
WINUSERAPI
BOOL
WINAPI
NtUserPaintDesktop(
//[=PaintDesktop]
    __in HDC hdc
    );

//[Menu]
NTSTATUS
NTAPI
NtUserPaintMenuBar(
//[=PaintMenuBar]
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown
    );

//[Other]
NTSTATUS
NTAPI
NtUserPaintMonitor(
//[=PaintMonitor]
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown
    );

//[Window]
WINUSERAPI
BOOL
WINAPI
NtUserPhysicalToLogicalPoint(
//[=PhysicalToLogicalPoint]
    __in HWND hWnd,
    __inout LPPOINT lpPoint
    );

//[Print]
WINUSERAPI
BOOL
WINAPI
NtUserPrintWindow(
//[=PrintWindow]
    __in HWND hwnd,
    __in HDC hdcBlt,
    __in UINT nFlags
    );

//[Message]
WINUSERAPI
BOOL
WINAPI
NtUserQuerySendMessage(
//[=QuerySendMessage]
     LPMSG pMsg 
    );

//[Window]
WINUSERAPI
HWND
WINAPI
NtUserRealChildWindowFromPoint(
//[=RealChildWindowFromPoint]
    __in HWND hwndParent,
    __in POINT ptParentClientCoords
    );

//[Drawing]
WINUSERAPI
BOOL
WINAPI
NtUserRedrawWindow(
//[=RedrawWindow]
    __in_opt HWND hWnd,
    __in_opt PRECT lprcUpdate,
    __in_opt HRGN hrgnUpdate,
    __in UINT flags
    );

//[Error]
NTSTATUS
NTAPI
NtUserRegisterErrorReportingDialog(
//[=RegisterErrorReportingDialog]
    ULONG Unknown,
    ULONG Unknown
    );

//[Keyboard]
WINUSERAPI
BOOL
WINAPI
NtUserRegisterHotKey(
//[=RegisterHotKey]
    __in_opt HWND hWnd,
    __in int id,
    __in UINT fsModifiers,
    __in UINT vk
    );

//[Device]
WINUSERAPI
BOOL
WINAPI
NtUserRegisterRawInputDevices(
//[=RegisterRawInputDevices]
    __in PCRAWINPUTDEVICE pRawInputDevices,
    __in UINT uiNumDevices,
    __in UINT cbSize
    );

//[Other]
NTSTATUS
NTAPI
NtUserRegisterServicesProcess(
//[=RegisterServicesProcess]
    ULONG Unknown
    );

//[Other]
NTSTATUS
NTAPI
NtUserRegisterSessionPort(
//[=RegisterSessionPort]
    ULONG Unknown,
    ULONG Unknown
    );

//[Other]
NTSTATUS
NTAPI
NtUserRegisterTasklist(
//[=RegisterTasklist]
    ULONG Unknown
    );

//[Clipboard]
WINUSERAPI
BOOL
WINAPI
NtUserRemoveClipboardFormatListener(
//[=RemoveClipboardFormatListener]
    __in HWND hwnd
    );

//[Menu]
WINUSERAPI
BOOL
WINAPI
NtUserRemoveMenu(
//[=RemoveMenu]
    __in HMENU hMenu,
    __in UINT uPosition,
    __in UINT uFlags
    );

//[Desktop]
NTSTATUS
NTAPI
NtUserResolveDesktopForWOW(
//[=ResolveDesktopForWOW]
    ULONG Unknown
    );

//[Keyboard]
WINUSERAPI
UINT
WINAPI
NtUserSendInput(
//[=SendInput]
    __in UINT cInputs,
    __in LPINPUT pInputs,
    __in int cbSize
    );

//[Keyboard]
WINUSERAPI
HWND
WINAPI
NtUserSetActiveWindow(
//[=SetActiveWindow]
    __in HWND hWnd
    );

//[Mouse]
WINUSERAPI
HWND
WINAPI
NtUserSetCapture(
//[=SetCapture]
    __in HWND hWnd
    );

//[Class]
WINUSERAPI
WORD
WINAPI
NtUserSetClassWord(
//[=SetClassWord]
    __in HWND hWnd,
    __in int nIndex,
    __in WORD wNewWord
    );

//[Clipboard]
WINUSERAPI
HWND
WINAPI
NtUserSetClipboardViewer(
//[=SetClipboardViewer]
    __in HWND hWndNewViewer
    );

//[Cursor]
WINUSERAPI
HCURSOR
WINAPI
NtUserSetCursor(
//[=SetCursor]
    __in_opt HCURSOR hCursor
    );

//[Cursor]
NTSTATUS
NTAPI
NtUserSetCursorContents(
//[=SetCursorContents]
    ULONG Unknown,
    ULONG Unknown
    );

//[Keyboard]
WINUSERAPI
HWND
WINAPI
NtUserSetFocus(
//[=SetFocus]
    __in_opt HWND hWnd
    );

//[Touch]
WINUSERAPI
BOOL
WINAPI
NtUserSetGestureConfig(
//[=SetGestureConfig]
    __in HWND hwnd,
    __in DWORD dwReserved,
    __in UINT cIDs,
    __in PGESTURECONFIG pConfig,
    __in UINT cbSize
    );

//[Window]
NTSTATUS
NTAPI
NtUserSetInternalWindowPos(
//[=SetInternalWindowPos]
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown
    );

//[Keyboard]
WINUSERAPI
BOOL
WINAPI
NtUserSetKeyboardState(
//[=SetKeyboardState]
    __in PBYTE lpKeyState
    );

//[Window]
WINUSERAPI
BOOL
WINAPI
NtUserSetLayeredWindowAttributes(
//[=SetLayeredWindowAttributes]
    __in HWND hwnd,
    __in COLORREF crKey,
    __in BYTE bAlpha,
    __in DWORD dwFlags
    );

//[Other]
NTSTATUS
NTAPI
NtUserSetMagnificationLensCtxInformation(
//[=SetMagnificationLensCtxInformation]
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown
    );

//[Menu]
WINUSERAPI
BOOL
WINAPI
NtUserSetMenuContextHelpId(
//[=SetMenuContextHelpId]
    __in HMENU,
    __in DWORD
    );

//[Menu]
WINUSERAPI
BOOL
WINAPI
NtUserSetMenuDefaultItem(
//[=SetMenuDefaultItem]
    __in HMENU hMenu,
    __in UINT uItem,
    __in UINT fByPos
    );

//[Other]
NTSTATUS
NTAPI
NtUserSetMirrorRendering(
//[=SetMirrorRendering]
    ULONG Unknown,
    ULONG Unknown
    );

//[Window]
WINUSERAPI
HWND
WINAPI
NtUserSetParent(
//[=SetParent]
    __in HWND hWndChild,
    __in_opt HWND hWndNewParent
    );

//[Desktop]
WINUSERAPI
BOOL
WINAPI
NtUserSetProcessWindowStation(
//[=SetProcessWindowStation]
    _In_ HWINSTA hWinSta
    );

//[Other]
NTSTATUS
NTAPI
NtUserSetShellWindowEx(
//[=SetShellWindowEx]
    ULONG Unknown,
    ULONG Unknown
    );

//[Menu]
NTSTATUS
NTAPI
NtUserSetSystemMenu(
//[=SetSystemMenu]
    ULONG Unknown,
    ULONG Unknown
    );

//[Desktop]
WINUSERAPI
BOOL
WINAPI
NtUserSetThreadDesktop(
//[=SetThreadDesktop]
     __in HDESK hDesktop
    );

//[Timer]
WINUSERAPI
UINT_PTR
WINAPI
NtUserSetTimer(
//[=SetTimer]
    __in_opt HWND hWnd,
    __in UINT_PTR nIDEvent,
    __in UINT uElapse,
    __in_opt TIMERPROC lpTimerFunc
    );

//[Desktop]
WINUSERAPI
BOOL
WINAPI
NtUserSetUserObjectInformation(
    __in HANDLE hObj,
    __in int nIndex,
    __in PVOID pvInfo,
    __in DWORD nLength
    );

//[Window]
NTSTATUS
NTAPI
NtUserSetWindowCompositionAttribute(
//[=SetWindowCompositionAttribute]
    ULONG Unknown,
    ULONG Unknown
    );

//[Window]
WINUSERAPI
BOOL
WINAPI
NtUserSetWindowDisplayAffinity(
//[=SetWindowDisplayAffinity]
    __in HWND hWnd,
    __in DWORD dwAffinity
    );

//[Window]
WINUSERAPI
BOOL
WINAPI
NtUserSetWindowPlacement(
//[=SetWindowPlacement]
    __in HWND hWnd,
    __in PWINDOWPLACEMENT lpwndpl
    );

//[Window]
WINUSERAPI
BOOL
WINAPI
NtUserSetWindowPos(
//[=SetWindowPos]
    __in HWND hWnd,
    __in_opt HWND hWndInsertAfter,
    __in int X,
    __in int Y,
    __in int cx,
    __in int cy,
    __in UINT uFlags
    );

//[Window]
WINUSERAPI
WORD
WINAPI
NtUserSetWindowWord(
//[=SetWindowWord]
    __in HWND hWnd,
    __in int nIndex,
    __in WORD wNewWord
    );

//[Other]
NTSTATUS
NTAPI
NtUserSfmDxBindSwapChain(
//[=SfmDxBindSwapChain]
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown
    );

//[Other]
NTSTATUS
NTAPI
NtUserSfmDxGetSwapChainStats(
//[=SfmDxGetSwapChainStats]
    ULONG Unknown,
    ULONG Unknown
    );

//[Other]
NTSTATUS
NTAPI
NtUserSfmDxOpenSwapChain(
//[=SfmDxOpenSwapChain]
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown
    );

//[Other]
NTSTATUS
NTAPI
NtUserSfmDxQuerySwapChainBindingStatus(
//[=SfmDxQuerySwapChainBindingStatus]
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown
    );

//[Other]
NTSTATUS
NTAPI
NtUserSfmDxReleaseSwapChain(
//[=SfmDxReleaseSwapChain]
    ULONG Unknown,
    ULONG Unknown
    );

//[Other]
NTSTATUS
NTAPI
NtUserSfmDxReportPendingBindingsToDwm(
//[=SfmDxReportPendingBindingsToDwm]
    );

//[Other]
NTSTATUS
NTAPI
NtUserSfmDxSetSwapChainBindingStatus(
//[=SfmDxSetSwapChainBindingStatus]
    ULONG Unknown,
    ULONG Unknown
    );

//[Other]
NTSTATUS
NTAPI
NtUserSfmDxSetSwapChainStats(
//[=SfmDxSetSwapChainStats]
    ULONG Unknown,
    ULONG Unknown
    );

//[Caret]
WINUSERAPI
BOOL
WINAPI
NtUserShowCaret(
//[=ShowCaret]
    __in_opt HWND hWnd
    );

//[Control]
WINUSERAPI
BOOL
WINAPI
NtUserShowScrollBar(
//[=ShowScrollBar]
    __in HWND hWnd,
    __in int wBar,
    __in BOOL bShow
    );

//[Cursor]
NTSTATUS
NTAPI
NtUserShowSystemCursor(
//[=ShowSystemCursor]
    ULONG Unknown
    );

//[Window]
WINUSERAPI
BOOL
WINAPI
NtUserShowWindow(
//[=ShowWindow]
    __in HWND hWnd,
    __in int nCmdShow
    );

//[Window]
WINUSERAPI
BOOL
WINAPI
NtUserShowWindowAsync(
//[=ShowWindowAsync]
    __in  HWND hWnd,
    __in  int nCmdShow
    );

//[Window]
WINUSERAPI
BOOL
WINAPI
NtUserSoundSentry(
//[=SoundSentry]
    );

//[Mouse]
WINUSERAPI
BOOL
WINAPI
NtUserTrackMouseEvent(
//[=TrackMouseEvent]
    __inout LPTRACKMOUSEEVENT lpEventTrack
    );

//[Menu]
WINUSERAPI
BOOL
WINAPI
NtUserTrackPopupMenuEx(
//[=TrackPopupMenuEx]
    __in HMENU hMenu,
    __in UINT,
    __in int,
    __in int,
    __in HWND hWnd,
    __in_opt LPTPMPARAMS pParams
    );

//[Client]
WINUSERAPI
BOOL
WINAPI
NtUserUnhookWinEvent(
//[=UnhookWinEvent]
    __in HWINEVENTHOOK hWinEventHook
    );

//[Client]
WINUSERAPI
BOOL
WINAPI
NtUserUnhookWindowsHookEx(
//[=UnhookWindowsHookEx]
    __in HHOOK hhk
    );

//[Desktop]
NTSTATUS
NTAPI
NtUserUnlockWindowStation(
//[=UnlockWindowStation]
    ULONG Unknown
    );

//[Keyboard]
WINUSERAPI
BOOL
WINAPI
NtUserUnregisterHotKey(
//[=UnregisterHotKey]
    __in_opt HWND hWnd,
    __in int id
    );

//[Other]
NTSTATUS
NTAPI
NtUserUnregisterSessionPort(
//[=UnregisterSessionPort]
    );

//[Other]
NTSTATUS
NTAPI
NtUserUnregisterUserApiHook(
//[=UnregisterUserApiHook]
    );

//[Window]
NTSTATUS
NTAPI
NtUserUpdateWindowTransform(
//[=UpdateWindowTransform]
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown
    );

//[Process]
WINUSERAPI
BOOL
WINAPI
NtUserUserHandleGrantAccess(
//[=UserHandleGrantAccess]
    __in HANDLE hUserHandle,
    __in HANDLE hJob,
    __in BOOL   bGrant
    );

//[Drawing]
WINUSERAPI
BOOL
WINAPI
NtUserValidateRect(
//[=ValidateRect]
    __in_opt HWND hWnd,
    __in_opt PRECT lpRect
    );

//[Message]
WINUSERAPI
BOOL
WINAPI
NtUserWaitMessage(
//[=WaitMessage]
    );

//[Window]
WINUSERAPI
HWND
WINAPI
NtUserWindowFromPhysicalPoint(
//[=WindowFromPhysicalPoint]
    __in POINT Point
    );

//[Window]
WINUSERAPI
HWND
WINAPI
NtUserWindowFromPoint(
//[=WindowFromPoint]
    __in POINT Point
    );

//[Window]
ULONG
WINAPI
NtUserAlterWindowStyle(
    HWND hWnd,
    ULONG Flags1,
    ULONG Flags2
    );

//[Unknown]
ULONG
WINAPI
NtUserAssociateInputContext(
    );

//[Unknown]
ULONG
WINAPI
NtUserBitBltSysBmp(
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown
    );

//[Unknown]
ULONG
WINAPI
NtUserBuildHimcList(
    );

//[Unknown]
ULONG
WINAPI
NtUserBuildHwndList(
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown
    );

//[Unknown]
ULONG
WINAPI
NtUserBuildNameList(
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown
    );

//[Unknown]
ULONG
WINAPI
NtUserBuildPropList(
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown
    );

//[Unknown]
ULONG
WINAPI
NtUserCallHwnd(
    ULONG Unknown,
    ULONG Unknown
    );

//[Unknown]
ULONG
WINAPI
NtUserCallHwndLock(
    ULONG Unknown,
    ULONG Unknown
    );

//[Unknown]
ULONG
WINAPI
NtUserCallHwndOpt(
    ULONG Unknown,
    ULONG Unknown
    );

//[Unknown]
ULONG
WINAPI
NtUserCallHwndParam(
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown
    );

//[Unknown]
ULONG
WINAPI
NtUserCallHwndParamLock(
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown
    );

//[Message]
BOOL
WINAPI
NtUserCallMsgFilter(
    _In_  LPMSG lpMsg,
    _In_  int nCode
    );

//[Unknown]
ULONG
WINAPI
NtUserCallNextHookEx(
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown
    );

//[Unknown]
ULONG_PTR
WINAPI
NtUserCallNoParam(
    ULONG Code
    );

//[Unknown]
ULONG_PTR
WINAPI
NtUserCallOneParam(
    ULONG_PTR Arg,
    ULONG Code
    );

//[Unknown]
ULONG_PTR
WINAPI
NtUserCallTwoParam(
    ULONG_PTR Arg1,
    ULONG_PTR Arg2,
    ULONG Code
    );

//[Unknown]
ULONG
WINAPI
NtUserChangeDisplaySettings(
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown
    );

//[Unknown]
ULONG
WINAPI
NtUserCheckAccessForIntegrityLevel(
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown
    );

//[Unknown]
ULONG
WINAPI
NtUserCheckMenuItem(
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown
    );

//[Unknown]
ULONG
WINAPI
NtUserConsoleControl(
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown
    );

//[Unknown]
ULONG
WINAPI
NtUserConvertMemHandle(
    ULONG Unknown,
    ULONG Unknown
    );


//[Windows2003]
ULONG
WINAPI
NtUserCreateDesktop(
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown
    );

//[Unknown]
ULONG
WINAPI
NtUserCreateDesktopEx(
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown
    );


//[Unknown]
ULONG
WINAPI
NtUserCreateInputContext(
    );

//[Unknown]
ULONG
WINAPI
NtUserCreateLocalMemHandle(
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown
    );

//[Window]
ULONG
WINAPI
NtUserCreateWindowEx(
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    HINSTANCE hInstance,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown
    );

//[Unknown]
ULONG
WINAPI
NtUserCreateWindowStation(
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown
    );


//[Unknown]
ULONG
WINAPI
NtUserCtxDisplayIOCtl(
    );


//[Windows2003]
ULONG
WINAPI
NtUserDdeGetQualityOfService(
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown
    );

//[Unknown]
ULONG
WINAPI
NtUserDdeInitialize(
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown
    );


//[Windows2003]
ULONG
WINAPI
NtUserDdeSetQualityOfService(
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown
    );

//[Unknown]
ULONG
WINAPI
NtUserDefSetText(
    ULONG Unknown,
    ULONG Unknown
    );

//[Unknown]
ULONG
WINAPI
NtUserDestroyAcceleratorTable(
    ULONG Unknown
    );

//[Unknown]
ULONG
WINAPI
NtUserDestroyCursor(
    ULONG Unknown,
    ULONG Unknown
    );


//[Unknown]
ULONG
WINAPI
NtUserDestroyInputContext(
    );


//[Unknown]
ULONG
WINAPI
NtUserDisableThreadIme(
    );

//[Message]
LRESULT
WINAPI
NtUserDispatchMessage(
    _In_  LPMSG lpmsg
    );

//[Unknown]
ULONG
WINAPI
NtUserDisplayConfigGetDeviceInfo(
    ULONG Unknown
    );

//[Unknown]
ULONG
WINAPI
NtUserDisplayConfigSetDeviceInfo(
    ULONG Unknown
    );

//[Unknown]
ULONG
WINAPI
NtUserDrawCaption(
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown
    );

//[Unknown]
ULONG
WINAPI
NtUserDrawCaptionTemp(
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown
    );

//[Unknown]
ULONG
WINAPI
NtUserDrawIconEx(
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown
    );

//[Unknown]
ULONG
WINAPI
NtUserDrawMenuBarTemp(
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown
    );

//[Unknown]
ULONG
WINAPI
NtUserEnableMenuItem(
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown
    );

//[Control]
ULONG
WINAPI
NtUserEnableScrollBar(
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown
    );

//[Unknown]
ULONG
WINAPI
NtUserEndDeferWindowPosEx(
    ULONG Unknown,
    ULONG Unknown
    );

//[Unknown]
ULONG
WINAPI
NtUserEndTouchOperation(
    ULONG Unknown
    );

//[Unknown]
ULONG
WINAPI
NtUserEnumDisplayDevices(
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown
    );

//[Unknown]
ULONG
WINAPI
NtUserEnumDisplaySettings(
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown
    );

//[Unknown]
ULONG
WINAPI
NtUserEvent(
    ULONG Unknown
    );

//[Unknown]
ULONG
WINAPI
NtUserFillWindow(
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown
    );

//[Unknown]
ULONG
WINAPI
NtUserFindExistingCursorIcon(
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown
    );

//[Unknown]
ULONG
WINAPI
NtUserFindWindowEx(
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown
    );

//[Unknown]
ULONG
WINAPI
NtUserGetAltTabInfo(
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown
    );


//[Unknown]
ULONG
WINAPI
NtUserGetAppImeLevel(
    );

//[Unknown]
ULONG
WINAPI
NtUserGetAsyncKeyState(
    ULONG Unknown
    );

//[Unknown]
ULONG
WINAPI
NtUserGetAtomName(
    ULONG Unknown,
    ULONG Unknown
    );

//[Unknown]
ULONG
WINAPI
NtUserGetCPD(
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown
    );


//[Windows2000]
BOOL
WINAPI
NtUserGetClassInfo(
    _In_ HINSTANCE hInstance,
    _In_ PUNICODE_STRING ClassName,
    _Out_ PVOID pClassEx,
    _Out_ PPVOID MenuName,
    BOOL Ansi
    );

//[Class]
BOOL
WINAPI
NtUserGetClassInfoEx(
    _In_ HINSTANCE hInstance,
    _In_ PUNICODE_STRING ClassName,
    _Out_ PVOID pClassEx,
    _Out_ PULONG MenuName,
    BOOL Ansi
    );

//[Class]
ULONG
WINAPI
NtUserGetClassName(
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown
    );

//[Unknown]
ULONG
WINAPI
NtUserGetClipboardData(
    ULONG Unknown,
    ULONG Unknown
    );

//[Unknown]
ULONG
WINAPI
NtUserGetClipboardFormatName(
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown
    );

//[Unknown]
ULONG
WINAPI
NtUserGetControlBrush(
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown
    );

//[Unknown]
ULONG
WINAPI
NtUserGetControlColor(
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown
    );

//[Unknown]
ULONG
WINAPI
NtUserGetCursorFrameInfo(
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown
    );

//[Unknown]
ULONG
WINAPI
NtUserGetDisplayConfigBufferSizes(
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown
    );

//[Unknown]
ULONG
WINAPI
NtUserGetGestureExtArgs(
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown
    );

//[Unknown]
ULONG
WINAPI
NtUserGetGestureInfo(
    ULONG Unknown,
    ULONG Unknown
    );

//[Unknown]
ULONG
WINAPI
NtUserGetIconInfo(
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown
    );

//[Unknown]
ULONG
WINAPI
NtUserGetIconSize(
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown
    );

//[Unknown]
ULONG
WINAPI
NtUserGetImeHotKey(
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown
    );


//[Unknown]
ULONG
WINAPI
NtUserGetImeInfoEx(
    );

//[Unknown]
ULONG
WINAPI
NtUserGetKeyNameText(
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown
    );

//[Unknown]
ULONG
WINAPI
NtUserGetKeyState(
    ULONG Unknown
    );

//[Unknown]
ULONG
WINAPI
NtUserGetKeyboardLayoutName(
    ULONG Unknown
    );

//[Unknown]
ULONG
WINAPI
NtUserGetMenuIndex(
    ULONG Unknown,
    ULONG Unknown
    );

//[Message]
BOOL
WINAPI
NtUserGetMessage(
  _Out_     LPMSG lpMsg,
  _In_opt_  HWND hWnd,
  _In_      UINT wMsgFilterMin,
  _In_      UINT wMsgFilterMax
    );

//[Window]
HANDLE
WINAPI
NtUserGetProp(
    _In_ HWND hWnd,
    ATOM PropId
    );

//[Unknown]
ULONG
WINAPI
NtUserGetRawInputBuffer(
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown
    );

//[Unknown]
ULONG
WINAPI
NtUserGetRawInputDeviceInfo(
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown
    );

//[Unknown]
ULONG
WINAPI
NtUserGetThreadState(
    ULONG Unknown
    );

//[Unknown]
ULONG
WINAPI
NtUserGetTouchInputInfo(
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown
    );

//[Unknown]
ULONG
WINAPI
NtUserGetUpdateRect(
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown
    );

//[Unknown]
ULONG
WINAPI
NtUserGetUpdateRgn(
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown
    );

//[Unknown]
ULONG
WINAPI
NtUserGetWOWClass(
    ULONG Unknown,
    ULONG Unknown
    );


//[Unknown]
ULONG
WINAPI
NtUserHardErrorControl(
    );

//[Unknown]
ULONG
WINAPI
NtUserHwndQueryRedirectionInfo(
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown
    );

//[Unknown]
ULONG
WINAPI
NtUserHwndSetRedirectionInfo(
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown
    );

//[Unknown]
ULONG
WINAPI
NtUserInitTask(
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown
    );


//[Unknown]
ULONG
WINAPI
NtUserInitialize(
    );

//[Unknown]
ULONG
WINAPI
NtUserInitializeClientPfnArrays(
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown
    );

//[Unknown]
ULONG
WINAPI
NtUserInjectGesture(
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown
    );

//[Unknown]
ULONG
WINAPI
NtUserInternalGetWindowIcon(
    ULONG Unknown,
    ULONG Unknown
    );

//[Unknown]
int
WINAPI
NtUserInternalGetWindowText(
    _In_ HWND hWnd,
    _Out_ PWSTR lpString,
    _In_ int nMaxCount
    );

//[Unknown]
ULONG
WINAPI
NtUserLoadKeyboardLayoutEx(
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown
    );

//[Unknown]
ULONG
WINAPI
NtUserMNDragLeave(
    );

//[Unknown]
ULONG
WINAPI
NtUserMNDragOver(
    ULONG Unknown,
    ULONG Unknown
    );

//[Unknown]
ULONG
WINAPI
NtUserManageGestureHandlerWindow(
    ULONG Unknown,
    ULONG Unknown
    );

//[Unknown]
ULONG
WINAPI
NtUserMapVirtualKeyEx(
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown
    );

//[Message]
LRESULT
WINAPI
NtUserMessageCall(
    _In_ HWND hWnd,
    _In_ UINT Msg,
    _In_ WPARAM wParam,
    _In_ LPARAM lParam,
    _In_ PVOID Data OPTIONAL,
    _In_ ULONG Type,
    _In_ BOOL Ansi
    );

//[Unknown]
ULONG
WINAPI
NtUserMinMaximize(
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown
    );

//[Unknown]
ULONG
WINAPI
NtUserModifyUserStartupInfoFlags(
    ULONG Unknown,
    ULONG Unknown
    );

//[Unknown]
ULONG
WINAPI
NtUserModifyWindowTouchCapability(
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown
    );

//[Unknown]
ULONG
WINAPI
NtUserNotifyIMEStatus(
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown
    );


//[Unknown]
ULONG
WINAPI
NtUserNotifyProcessCreate(
    );

//[Unknown]
ULONG
WINAPI
NtUserNotifyWinEvent(
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown
    );

//[Unknown]
ULONG
WINAPI
NtUserOpenClipboard(
    ULONG Unknown,
    ULONG Unknown
    );

//[Unknown]
ULONG
WINAPI
NtUserOpenDesktop(
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown
    );

//[Unknown]
ULONG
WINAPI
NtUserOpenWindowStation(
    ULONG Unknown,
    ULONG Unknown
    );

//[Message]
ULONG
WINAPI
NtUserPeekMessage(
    _Out_     LPMSG lpMsg,
    _In_opt_  HWND hWnd,
    _In_      UINT wMsgFilterMin,
    _In_      UINT wMsgFilterMax,
    _In_      UINT wRemoveMsg
    );

//[Message]
BOOL
WINAPI
NtUserPostMessage(
    _In_ HWND hWnd,
    _In_ UINT Msg,
    _In_ WPARAM wParam,
    _In_ LPARAM lParam
    );

//[Unknown]
ULONG
WINAPI
NtUserPostThreadMessage(
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown
    );

//[Unknown]
ULONG
WINAPI
NtUserProcessConnect(
    ULONG Unknown,
    ULONG Unknown
    );

//[Unknown]
ULONG
WINAPI
NtUserQueryDisplayConfig(
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown
    );


//[Unknown]
ULONG
WINAPI
NtUserQueryInformationThread(
    );


//[Unknown]
ULONG
WINAPI
NtUserQueryInputContext(
    );


//[Windows2000]
ULONG
WINAPI
NtUserQueryUserCounters(
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown
    );

//[Window]
ULONG
WINAPI
NtUserQueryWindow(
    _In_ HWND hWnd,
    ULONG QueryType
    );

//[Unknown]
ULONG
WINAPI
NtUserRealInternalGetMessage(
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown
    );

//[Unknown]
ULONG
WINAPI
NtUserRealWaitMessageEx(
    ULONG Unknown,
    ULONG Unknown
    );

//[Class]
ULONG
WINAPI
NtUserRegisterClassExWOW(
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown
    );

//[Unknown]
ULONG
WINAPI
NtUserRegisterUserApiHook(
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown
    );

//[Unknown]
ULONG
WINAPI
NtUserRegisterWindowMessage(
    IN PUNICODE_STRING Name
    );


//[Unknown]
ULONG
WINAPI
NtUserRemoteConnect(
    );


//[Unknown]
ULONG
WINAPI
NtUserRemoteRedrawRectangle(
    );


//[Unknown]
ULONG
WINAPI
NtUserRemoteRedrawScreen(
    );


//[Unknown]
ULONG
WINAPI
NtUserRemoteStopScreenUpdates(
    );

//[Window]
HANDLE
WINAPI
NtUserRemoveProp(
    _In_ HWND hWnd,
    ATOM PropId
    );

//[Unknown]
ULONG
WINAPI
NtUserSBGetParms(
    _In_ HWND hWnd,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown
    );

//[Unknown]
ULONG
WINAPI
NtUserScrollDC(
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown
    );

//[Unknown]
ULONG
WINAPI
NtUserScrollWindowEx(
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown
    );


//[Unknown]
ULONG
WINAPI
NtUserSelectPalette(
    );


//[Windows2000]
ULONG
WINAPI
NtUserSendMessageCallback(
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown
    );


//[Windows2000]
ULONG
WINAPI
NtUserSendNotifyMessage(
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown
    );

//[Unknown]
ULONG
WINAPI
NtUserSendTouchInput(
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown
    );


//[Unknown]
ULONG
WINAPI
NtUserSetAppImeLevel(
    );

//[Unknown]
ULONG
WINAPI
NtUserSetChildWindowNoActivate(
    ULONG Unknown
    );

//[Class]
ULONG
WINAPI
NtUserSetClassLong(
    _In_ HWND hWnd,
    _In_ int nIndex,
    _In_ LONG dwNewLong,
    _In_ BOOL Ansi
    );


//[Class]
LONG_PTR
WINAPI
NtUserSetClassLongPtr(
    _In_ HWND hWnd,
    _In_ int nIndex,
    _In_ LONG_PTR dwNewLong,
    _In_ BOOL Ansi
    );

//[Unknown]
ULONG
WINAPI
NtUserSetClipboardData(
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown
    );


//[Windows2003]
ULONG
WINAPI
NtUserSetConsoleReserveKeys(
    ULONG Unknown,
    ULONG Unknown
    );

//[Unknown]
ULONG
WINAPI
NtUserSetCursorIconData(
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown
    );


//[Windows2000]
ULONG
WINAPI
NtUserSetDbgTag(
    ULONG Unknown,
    ULONG Unknown
    );

//[Unknown]
ULONG
WINAPI
NtUserSetDisplayConfig(
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown
    );

//[Unknown]
ULONG
WINAPI
NtUserSetImeHotKey(
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown
    );


//[Unknown]
ULONG
WINAPI
NtUserSetImeInfoEx(
    );

//[Unknown]
ULONG
WINAPI
NtUserSetImeOwnerWindow(
    ULONG Unknown,
    ULONG Unknown
    );

//[Unknown]
ULONG
WINAPI
NtUserSetInformationThread(
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown
    );


//[Windows2003]
ULONG
WINAPI
NtUserSetLogonNotifyWindow(
    ULONG Unknown
    );

//[Unknown]
ULONG
WINAPI
NtUserSetMenu(
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown
    );

//[Unknown]
ULONG
WINAPI
NtUserSetMenuFlagRtoL(
    ULONG Unknown
    );

//[Unknown]
ULONG
WINAPI
NtUserSetProcessDPIAware(
    );

//[Window]
BOOL
WINAPI
NtUserSetProp(
    _In_ HWND hWnd,
    ATOM PropId,
    HANDLE Value
    );


//[Windows2000]
ULONG
WINAPI
NtUserSetRipFlags(
    ULONG Unknown,
    ULONG Unknown
    );

//[Unknown]
ULONG
WINAPI
NtUserSetScrollInfo(
    _In_ HWND hWnd,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown
    );

//[Unknown]
ULONG
WINAPI
NtUserSetSysColors(
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown
    );

//[Unknown]
ULONG
WINAPI
NtUserSetSystemCursor(
    ULONG Unknown,
    ULONG Unknown
    );

//[Unknown]
ULONG
WINAPI
NtUserSetSystemTimer(
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown
    );


//[Unknown]
ULONG
WINAPI
NtUserSetThreadLayoutHandles(
    );

//[Unknown]
ULONG
WINAPI
NtUserSetThreadState(
    ULONG Unknown,
    ULONG Unknown
    );

//[Unknown]
ULONG
WINAPI
NtUserSetWinEventHook(
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown
    );

//[Window]
BOOL
WINAPI
NtUserSetWindowFNID(
    _In_ HWND hWnd,
    _In_ ULONG FnID
    );

//[Class]
LONG
WINAPI
NtUserSetWindowLong(
    _In_ HWND hWnd,
    _In_ int nIndex,
    _In_ LONG dwNewLong,
    _In_ BOOL Ansi
    );


//[Class]
LONG_PTR
WINAPI
NtUserSetWindowLongPtr(
    _In_ HWND hWnd,
    _In_ int nIndex,
    _In_ LONG_PTR dwNewLong,
    _In_ BOOL Ansi
    );

//[Unknown]
ULONG
WINAPI
NtUserSetWindowRgn(
    _In_ HWND hWnd,
    ULONG Unknown,
    ULONG Unknown
    );

//[Unknown]
ULONG
WINAPI
NtUserSetWindowRgnEx(
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown
    );

//[Unknown]
ULONG
WINAPI
NtUserSetWindowStationUser(
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown
    );

//[Unknown]
ULONG
WINAPI
NtUserSetWindowsHookAW(
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown
    );

//[Unknown]
ULONG
WINAPI
NtUserSetWindowsHookEx(
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown
    );

//[Unknown]
ULONG
WINAPI
NtUserSfmDestroyLogicalSurfaceBinding(
    ULONG Unknown
    );

//[Unknown]
ULONG
WINAPI
NtUserSfmGetLogicalSurfaceBinding(
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown
    );

//[Unknown]
ULONG
WINAPI
NtUserSwitchDesktop(
    ULONG Unknown,
    ULONG Unknown
    );

//[Unknown]
ULONG
WINAPI
NtUserSystemParametersInfo(
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown
    );

//[Unknown]
ULONG
WINAPI
NtUserTestForInteractiveUser(
    ULONG Unknown
    );

//[Unknown]
ULONG
WINAPI
NtUserThunkedMenuInfo(
    ULONG Unknown,
    ULONG Unknown
    );

//[Unknown]
ULONG
WINAPI
NtUserThunkedMenuItemInfo(
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown
    );

//[Unknown]
ULONG
WINAPI
NtUserToUnicodeEx(
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown
    );

//[Unknown]
ULONG
WINAPI
NtUserTranslateAccelerator(
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown
    );

//[Unknown]
ULONG
WINAPI
NtUserTranslateMessage(
    ULONG Unknown,
    ULONG Unknown
    );

//[Unknown]
ULONG
WINAPI
NtUserUnloadKeyboardLayout(
    ULONG Unknown
    );

//[Window]
ULONG
WINAPI
NtUserUnregisterClass(
    _In_ PUNICODE_STRING ClassName,
    _In_ HINSTANCE hInstance,
    _Out_ PVOID Unknown
    );

//[Unknown]
ULONG
WINAPI
NtUserUpdateInputContext(
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown
    );

//[Unknown]
ULONG
WINAPI
NtUserUpdateInstance(
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown
    );

//[Unknown]
ULONG
WINAPI
NtUserUpdateLayeredWindow(
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown
    );

//[Unknown]
ULONG
WINAPI
NtUserUpdatePerUserSystemParameters(
    ULONG Unknown
    );

//[Unknown]
ULONG
WINAPI
NtUserValidateHandleSecure(
    ULONG Unknown
    );

//[Unknown]
ULONG
WINAPI
NtUserValidateTimerCallback(
    ULONG Unknown
    );

//[Unknown]
ULONG
WINAPI
NtUserVkKeyScanEx(
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown
    );

//[Unknown]
ULONG
WINAPI
NtUserWaitForInputIdle(
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown
    );

//[Unknown]
ULONG
WINAPI
NtUserWaitForMsgAndEvent(
    ULONG Unknown
    );


//[Windows2003]
ULONG
WINAPI
NtUserWin32PoolAllocationStats(
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown,
    ULONG Unknown
    );

//[Unknown]
ULONG
WINAPI
NtUserYieldTask(
    );
